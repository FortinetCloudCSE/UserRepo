<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ch 1 Getting Started with Repos, Containers, and Hugo on Hugo web framework for Fortinet Demos</title>
    <link>https://fortinetcloudcse.github.io/UserRepo/01gettingstarted.html</link>
    <description>Recent content in Ch 1 Getting Started with Repos, Containers, and Hugo on Hugo web framework for Fortinet Demos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language><atom:link href="https://fortinetcloudcse.github.io/UserRepo/01gettingstarted/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Task 1 - Repo Creation</title>
      <link>https://fortinetcloudcse.github.io/UserRepo/01gettingstarted/userrepo.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://fortinetcloudcse.github.io/UserRepo/01gettingstarted/userrepo.html</guid>
      <description>Repo creation request Request a new repo for your TECWorkshop (this will be referred to as your UserRepo)
Send an email to fortinetcloudcse@fortinet.com to request a new GitHub repo and Jenkins Pipeline. Providing the following: Repo Name GitHub Usernames of collaborators Your Fortinet email address that you use to log in to FortiCloud Behind the scenes, a script is used to create your TECWorkshop repo with appropriate protections, features, and collaborators.</description>
    </item>
    <item>
      <title>Task 2 - Container build</title>
      <link>https://fortinetcloudcse.github.io/UserRepo/01gettingstarted/containerbuild.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://fortinetcloudcse.github.io/UserRepo/01gettingstarted/containerbuild.html</guid>
      <description>Task 2 Build a FortinetHugo container You only need to build the container when you&amp;rsquo;re starting development
Container rebuild is necessary when: CentralRepo has changed You removed/deleted the previously built container Once Built, you can re-run the container whenever you wish to keep creating content and reviewing your Hugo site Warning You can choose your own container name and it MUST be lowercase only . Our example uses Tip The Full commands and explanation for building and running docker are listed below.</description>
    </item>
    <item>
      <title>Task 3 - Run Container</title>
      <link>https://fortinetcloudcse.github.io/UserRepo/01gettingstarted/containerrun.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://fortinetcloudcse.github.io/UserRepo/01gettingstarted/containerrun.html</guid>
      <description>Task 3: Run FortinetHugo container Run the container with local disk mounts so you review your markdown TECWorkshop Guide as you&amp;rsquo;re creating the content (repeat this procedure for any TECWorkshop you&amp;rsquo;re creating) Tip The Full commands and explanation for running your pre-build docker are listed below. We&amp;rsquo;ve also included a shell script in this repo to run your container image ./scripts/docker_run.sh
docker run --rm -it -v $(pwd)/content/:/home/CentralRepo/content -v $(pwd)/config.toml:/home/CentralRepo/config.toml -v $(pwd)/docs:/home/CentralRepo/public -p 1313:1313 fortinet-hugo:latest &amp;lsquo;-rm&amp;rsquo; flag removes the container after it&amp;rsquo;s closed&amp;hellip;freeing up resources &amp;lsquo;-it&amp;rsquo; flag provides an interactive prompt into the Container &amp;lsquo;-v&amp;rsquo; flag creates a disk mount to the local file system available within the container OS &amp;lsquo;-p&amp;rsquo; publishes container ports to the local OS (used to view the local Hugo Webserver) the above command runs the container and logs you into the container Ubuntu OS CLI (most Linux commands will work)</description>
    </item>
    <item>
      <title>Optional - Install Hugo</title>
      <link>https://fortinetcloudcse.github.io/UserRepo/01gettingstarted/localhugoinstall.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://fortinetcloudcse.github.io/UserRepo/01gettingstarted/localhugoinstall.html</guid>
      <description>Tip Hugo is installed on the container so it&amp;rsquo;s best to use it there. These instructions are included for legacy learning purposes Hugo Local install If you&amp;rsquo;re using a Mac, run the following brew install from your terminal
brew install hugo If you&amp;rsquo;re using Windows, install chocolatey for windows (follow directions here). Once installed run the following
choco install hugo -confirm Run Hugo webserver locally to see a local version of the rendered website</description>
    </item>
  </channel>
</rss>